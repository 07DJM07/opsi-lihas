; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib gmbh
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/credits/

DefVar $UnInstallCommand$
DefVar $InstalledConfigurationProduct$
DefVar $mshotfixlogdir$
DefVar $deployedFile$
set $mshotfixlogdir$ = "%Systemdrive%" + "\opsi.org\mshotfix\"
set $deployedFile$ = "%Systemdrive%" + "\opsi.org\mshotfix\office_2010_hotfix_deployed.txt"

If FileExists ( $deployedFile$ )
        Files_del_office_2010_hotfix_deployed.txt
endif


set $rebootrequired$ = "no"


comment "Delete program shortcuts"
LinkFolder_uninstall

comment "check on 32-Bit ProPlus"
Set $MsiId$ = '{90140000-0011-0000-0000-0000000ff1ce}'


Message "Uninstalling " + $ProductId$ + " ..."

if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\" + $MsiId$ + "] DisplayName") = "")
	comment "MSI id " + $MsiId$ + " found in registry, starting msiexec to uninstall"
	
	Set $InstalledConfigurationProduct$ = "ProPlus"
	
	Message "Uninstalling " + $ProductId$ + " ..." + $InstalledConfigurationProduct$
	
	comment "Prepare config.xml"
	Files_copyUninstall.xml
	PatchTextFile_Uninstall.xml $TEMP$ + "\uninstall.xml"
	Set $UnInstallCommand$ = "%SCRIPTPATH%\files\" +  $lang2install$ + "\x86\Setup.exe " + " /uninstall " + $InstalledConfigurationProduct$ + " /config " +  "%SystemDrive%\tmp\uninstall.xml"
	Winbatch_uninstall
	sub_check_exitcode
	
	if ($rebootrequired$ = "yes")
		comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010	A restart is required to complete the install. This message is indicative of a success."
		
		comment " so try an immediate reboot and dont run in a loop ..."
		
		ExitWindows /ImmediateReboot
	
	endif
endif

comment "check on 64-Bit ProPlus"
Set $MsiId$ = '{90140000-0011-0000-1000-0000000ff1ce}'

Message "Uninstalling " + $ProductId$ + " ..."

if not (GetRegistryStringValue64("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\" + $MsiId$ + "] DisplayName") = "")
	comment "MSI id " + $MsiId$ + " found in registry, starting msiexec to uninstall"
	
	Set $InstalledConfigurationProduct$ = "ProPlus"
	
	Message "Uninstalling " + $ProductId$ + " ..." + $InstalledConfigurationProduct$
	
	comment "Prepare config.xml"
	Files_copyUninstall.xml
	PatchTextFile_Uninstall.xml $TEMP$ + "\uninstall.xml"
	Set $UnInstallCommand$ = "%SCRIPTPATH%\files\" +  $lang2install$ + "\x64\Setup.exe " + " /uninstall " + $InstalledConfigurationProduct$ + " /config " +  "%SystemDrive%\tmp\uninstall.xml"
	Winbatch_uninstall
	sub_check_exitcode
	
	if ($rebootrequired$ = "yes")
		comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010	A restart is required to complete the install. This message is indicative of a success."
		
		comment " so try an immediate reboot and dont run in a loop ..."
		
		ExitWindows /ImmediateReboot
	
	endif
endif


comment "check on 32-Bit Standard"
Set $MsiId$ = '{90140000-0012-0000-0000-0000000ff1ce}'


Message "Uninstalling " + $ProductId$ + " ..."

if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\" + $MsiId$ + "] DisplayName") = "")
	comment "MSI id " + $MsiId$ + " found in registry, starting msiexec to uninstall"
	
	Set $InstalledConfigurationProduct$ = "Standard"
	
	Message "Uninstalling " + $ProductId$ + " ..." + $InstalledConfigurationProduct$
	
	comment "Prepare config.xml"
	Files_copyUninstall.xml
	PatchTextFile_Uninstall.xml $TEMP$ + "\uninstall.xml"
	Set $UnInstallCommand$ = "%SCRIPTPATH%\files\" +  $lang2install$ + "\x86\Setup.exe " + " /uninstall " + $InstalledConfigurationProduct$ + " /config " +  "%SystemDrive%\tmp\uninstall.xml"
	Winbatch_uninstall
	sub_check_exitcode
	
	if ($rebootrequired$ = "yes")
		comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010	A restart is required to complete the install. This message is indicative of a success."
		
		comment " so try an immediate reboot and dont run in a loop ..."
		
		ExitWindows /ImmediateReboot
	
	endif
endif

comment "check on 64-Bit Standard"
Set $MsiId$ = '{90140000-0012-0000-1000-0000000FF1CE}'

Message "Uninstalling " + $ProductId$ + " ..."

if not (GetRegistryStringValue64("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\" + $MsiId$ + "] DisplayName") = "")
	comment "MSI id " + $MsiId$ + " found in registry, starting msiexec to uninstall"
	
	Set $InstalledConfigurationProduct$ = "Standard"
	
	Message "Uninstalling " + $ProductId$ + " ..." + $InstalledConfigurationProduct$
	
	comment "Prepare config.xml"
	Files_copyUninstall.xml
	PatchTextFile_Uninstall.xml $TEMP$ + "\uninstall.xml"
	Set $UnInstallCommand$ = "%SCRIPTPATH%\files\" +  $lang2install$ + "\x64\Setup.exe " + " /uninstall " + $InstalledConfigurationProduct$ + " /config " +  "%SystemDrive%\tmp\uninstall.xml"
	Winbatch_uninstall
	sub_check_exitcode
	
	if ($rebootrequired$ = "yes")
		comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010	A restart is required to complete the install. This message is indicative of a success."
		
		comment " so try an immediate reboot and dont run in a loop ..."
		
		ExitWindows /ImmediateReboot
	
	endif
endif


[Winbatch_uninstall]
$UnInstallCommand$

[Files_copyUninstall.xml]
copy "%SCRIPTPATH%\uninstall.xml" "$TEMP$\"

[PatchTextFile_Uninstall.xml]
GoToTop
FindLine_Containing '<Configuration Product='
DeleteTheLine
GoToTop
InsertLine '<Configuration Product="$InstalledConfigurationProduct$">'
GoToTop
FindLine_Containing '<Logging Type='
DeleteTheLine
InsertLine '	<Logging Type="standard" Path="$Logdir$" Template="$ProductId$ Uninstall(*).txt" />'

[Sub_check_exitcode]
comment "Test for installation success via exit code"
set $ExitCode$ = getLastExitCode
; informations to exit codes see
; http://msdn.microsoft.com/en-us/library/aa372835(VS.85).aspx
; http://msdn.microsoft.com/en-us/library/aa368542.aspx
if ($ExitCode$ = "0")
	comment "Looks good: setup program gives exitcode zero"
else
	comment "Setup program gives a exitcode unequal zero: " + $ExitCode$
	if ($ExitCode$ = "1605")
		comment "ERROR_UNKNOWN_PRODUCT	1605	This action is only valid for products that are currently installed."
		comment "Uninstall of a not installed product failed - no problem"
	else
		if ($ExitCode$ = "1641")
			comment "looks good: setup program gives exitcode 1641"
			comment "ERROR_SUCCESS_REBOOT_INITIATED	1641	The installer has initiated a restart. This message is indicative of a success."
		else
			if ($ExitCode$ = "3010")
				comment "looks good: setup program gives exitcode 3010"
				comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010	A restart is required to complete the install. This message is indicative of a success."
				set $rebootrequired$ = "yes"
			else
				logError "Fatal: Setup program gives an unknown exitcode unequal zero: " + $ExitCode$
				isFatalError
			endif
		endif
	endif
endif

[LinkFolder_uninstall]
; Example of deleting a folder from AllUsers startmenu:
;
; set_basefolder common_programs
; delete_subfolder $ProductId$
;
; Example of deleting a shortcut from AllUsers desktop:
;
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element "Excel 2010"
delete_element "Access 2010"
delete_element "Outlook 2010"
delete_element "Powerpoint 2010"
delete_element "Word 2010"

[Files_del_office_2010_hotfix_deployed.txt]
delete $deployedFile$
